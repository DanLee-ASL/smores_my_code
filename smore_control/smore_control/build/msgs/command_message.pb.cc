// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "command_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace command_message {
namespace msgs {

namespace {

const ::google::protobuf::Descriptor* CommandMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommandMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_command_5fmessage_2eproto() {
  protobuf_AddDesc_command_5fmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "command_message.proto");
  GOOGLE_CHECK(file != NULL);
  CommandMessage_descriptor_ = file->message_type(0);
  static const int CommandMessage_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, messagetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, priority_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, stringmessage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, positionneedtobe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, jointgaittable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, jointgaittablestatus_),
  };
  CommandMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CommandMessage_descriptor_,
      CommandMessage::default_instance_,
      CommandMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CommandMessage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_command_5fmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CommandMessage_descriptor_, &CommandMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_command_5fmessage_2eproto() {
  delete CommandMessage::default_instance_;
  delete CommandMessage_reflection_;
}

void protobuf_AddDesc_command_5fmessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::gazebo::msgs::protobuf_AddDesc_pose_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025command_message.proto\022\024command_message"
    ".msgs\032\npose.proto\"\271\001\n\016CommandMessage\022\023\n\013"
    "MessageType\030\001 \002(\005\022\020\n\010Priority\030\002 \001(\005\022\025\n\rS"
    "tringMessage\030\006 \001(\t\022+\n\020PositionNeedToBe\030\005"
    " \001(\0132\021.gazebo.msgs.Pose\022\032\n\016JointGaitTabl"
    "e\030\003 \003(\001B\002\020\001\022 \n\024JointGaitTableStatus\030\004 \003("
    "\010B\002\020\001", 245);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "command_message.proto", &protobuf_RegisterTypes);
  CommandMessage::default_instance_ = new CommandMessage();
  CommandMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_command_5fmessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_command_5fmessage_2eproto {
  StaticDescriptorInitializer_command_5fmessage_2eproto() {
    protobuf_AddDesc_command_5fmessage_2eproto();
  }
} static_descriptor_initializer_command_5fmessage_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int CommandMessage::kMessageTypeFieldNumber;
const int CommandMessage::kPriorityFieldNumber;
const int CommandMessage::kStringMessageFieldNumber;
const int CommandMessage::kPositionNeedToBeFieldNumber;
const int CommandMessage::kJointGaitTableFieldNumber;
const int CommandMessage::kJointGaitTableStatusFieldNumber;
#endif  // !_MSC_VER

CommandMessage::CommandMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CommandMessage::InitAsDefaultInstance() {
  positionneedtobe_ = const_cast< ::gazebo::msgs::Pose*>(&::gazebo::msgs::Pose::default_instance());
}

CommandMessage::CommandMessage(const CommandMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CommandMessage::SharedCtor() {
  _cached_size_ = 0;
  messagetype_ = 0;
  priority_ = 0;
  stringmessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  positionneedtobe_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CommandMessage::~CommandMessage() {
  SharedDtor();
}

void CommandMessage::SharedDtor() {
  if (stringmessage_ != &::google::protobuf::internal::kEmptyString) {
    delete stringmessage_;
  }
  if (this != default_instance_) {
    delete positionneedtobe_;
  }
}

void CommandMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommandMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommandMessage_descriptor_;
}

const CommandMessage& CommandMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_command_5fmessage_2eproto();  return *default_instance_;
}

CommandMessage* CommandMessage::default_instance_ = NULL;

CommandMessage* CommandMessage::New() const {
  return new CommandMessage;
}

void CommandMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    messagetype_ = 0;
    priority_ = 0;
    if (has_stringmessage()) {
      if (stringmessage_ != &::google::protobuf::internal::kEmptyString) {
        stringmessage_->clear();
      }
    }
    if (has_positionneedtobe()) {
      if (positionneedtobe_ != NULL) positionneedtobe_->::gazebo::msgs::Pose::Clear();
    }
  }
  jointgaittable_.Clear();
  jointgaittablestatus_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CommandMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 MessageType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &messagetype_)));
          set_has_messagetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Priority;
        break;
      }
      
      // optional int32 Priority = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Priority:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
          set_has_priority();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_JointGaitTable;
        break;
      }
      
      // repeated double JointGaitTable = 3 [packed = true];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_JointGaitTable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_jointgaittable())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_FIXED64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 26, input, this->mutable_jointgaittable())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_JointGaitTableStatus;
        break;
      }
      
      // repeated bool JointGaitTableStatus = 4 [packed = true];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_JointGaitTableStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_jointgaittablestatus())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 34, input, this->mutable_jointgaittablestatus())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_PositionNeedToBe;
        break;
      }
      
      // optional .gazebo.msgs.Pose PositionNeedToBe = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PositionNeedToBe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_positionneedtobe()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_StringMessage;
        break;
      }
      
      // optional string StringMessage = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_StringMessage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringmessage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stringmessage().data(), this->stringmessage().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CommandMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 MessageType = 1;
  if (has_messagetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->messagetype(), output);
  }
  
  // optional int32 Priority = 2;
  if (has_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->priority(), output);
  }
  
  // repeated double JointGaitTable = 3 [packed = true];
  if (this->jointgaittable_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_jointgaittable_cached_byte_size_);
  }
  for (int i = 0; i < this->jointgaittable_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->jointgaittable(i), output);
  }
  
  // repeated bool JointGaitTableStatus = 4 [packed = true];
  if (this->jointgaittablestatus_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_jointgaittablestatus_cached_byte_size_);
  }
  for (int i = 0; i < this->jointgaittablestatus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->jointgaittablestatus(i), output);
  }
  
  // optional .gazebo.msgs.Pose PositionNeedToBe = 5;
  if (has_positionneedtobe()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->positionneedtobe(), output);
  }
  
  // optional string StringMessage = 6;
  if (has_stringmessage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stringmessage().data(), this->stringmessage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->stringmessage(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CommandMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 MessageType = 1;
  if (has_messagetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->messagetype(), target);
  }
  
  // optional int32 Priority = 2;
  if (has_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->priority(), target);
  }
  
  // repeated double JointGaitTable = 3 [packed = true];
  if (this->jointgaittable_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _jointgaittable_cached_byte_size_, target);
  }
  for (int i = 0; i < this->jointgaittable_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->jointgaittable(i), target);
  }
  
  // repeated bool JointGaitTableStatus = 4 [packed = true];
  if (this->jointgaittablestatus_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _jointgaittablestatus_cached_byte_size_, target);
  }
  for (int i = 0; i < this->jointgaittablestatus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->jointgaittablestatus(i), target);
  }
  
  // optional .gazebo.msgs.Pose PositionNeedToBe = 5;
  if (has_positionneedtobe()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->positionneedtobe(), target);
  }
  
  // optional string StringMessage = 6;
  if (has_stringmessage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stringmessage().data(), this->stringmessage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->stringmessage(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CommandMessage::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 MessageType = 1;
    if (has_messagetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->messagetype());
    }
    
    // optional int32 Priority = 2;
    if (has_priority()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->priority());
    }
    
    // optional string StringMessage = 6;
    if (has_stringmessage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stringmessage());
    }
    
    // optional .gazebo.msgs.Pose PositionNeedToBe = 5;
    if (has_positionneedtobe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->positionneedtobe());
    }
    
  }
  // repeated double JointGaitTable = 3 [packed = true];
  {
    int data_size = 0;
    data_size = 8 * this->jointgaittable_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    _jointgaittable_cached_byte_size_ = data_size;
    total_size += data_size;
  }
  
  // repeated bool JointGaitTableStatus = 4 [packed = true];
  {
    int data_size = 0;
    data_size = 1 * this->jointgaittablestatus_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    _jointgaittablestatus_cached_byte_size_ = data_size;
    total_size += data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommandMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CommandMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CommandMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CommandMessage::MergeFrom(const CommandMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  jointgaittable_.MergeFrom(from.jointgaittable_);
  jointgaittablestatus_.MergeFrom(from.jointgaittablestatus_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_messagetype()) {
      set_messagetype(from.messagetype());
    }
    if (from.has_priority()) {
      set_priority(from.priority());
    }
    if (from.has_stringmessage()) {
      set_stringmessage(from.stringmessage());
    }
    if (from.has_positionneedtobe()) {
      mutable_positionneedtobe()->::gazebo::msgs::Pose::MergeFrom(from.positionneedtobe());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CommandMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandMessage::CopyFrom(const CommandMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_positionneedtobe()) {
    if (!this->positionneedtobe().IsInitialized()) return false;
  }
  return true;
}

void CommandMessage::Swap(CommandMessage* other) {
  if (other != this) {
    std::swap(messagetype_, other->messagetype_);
    std::swap(priority_, other->priority_);
    std::swap(stringmessage_, other->stringmessage_);
    std::swap(positionneedtobe_, other->positionneedtobe_);
    jointgaittable_.Swap(&other->jointgaittable_);
    jointgaittablestatus_.Swap(&other->jointgaittablestatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CommandMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommandMessage_descriptor_;
  metadata.reflection = CommandMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace command_message

// @@protoc_insertion_point(global_scope)
